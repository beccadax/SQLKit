//
//  SQL.swift
//  LittlinkRouterPerfect
//
//  Created by Brent Royal-Gordon on 10/27/16.
//
//

import Foundation

/// Errors generated by the SQL module.
public enum SQLError: Error {
    /// The attempt to connect to the server failed. Thrown by 
    /// `SQLDatabase.makeConnection()`.
    case connectionFailed(message: String)
    
    /// Executing or querying a statement failed. Thrown by `SQLConnection.execute`
    /// and `SQLConnection.query`.
    case executionFailed(message: String, statement: SQLStatement)
    
    /// The query succeeded, but did not find any records. Thrown by 
    /// `SQLQuery.only()`.
    case noRecordsFound(statement: SQLStatement)
    
    /// The query succeeded, but found more than one record. Thrown by 
    /// `SQLQuery.only()`.
    case extraRecordsFound(statement: SQLStatement)
    
    /// The specified column was not found. Thrown by `SQLQuery.columnKey`.
    /// 
    /// - Note: The column key included in this error may not have all of its fields 
    ///           filled in.
    case columnMissing(AnySQLColumnKey, statement: SQLStatement)
    
    /// The column was null, but the column key doesn't allow that. Thrown by 
    /// `SQLRow.value(for:)`.
    case columnNull(AnySQLColumnKey, statement: SQLStatement)
    
    /// The column was of a type that didn't match the column key, or attempting 
    /// to convert the specific value failed. May be thrown by `SQLRow.value(for:)` 
    /// or potentially by `SQLQuery.columnKey`.
    case columnNotConvertible(AnySQLColumnKey, sqlLiteral: String, statement: SQLStatement)
}
